name: macos

on:
  push:
    branches:
    - master

jobs:
  build:

    runs-on: macos-latest

    strategy:
      matrix:
        node-version: [12.x]

    steps:
    - uses: actions/checkout@v1 # Version range or exact version of a Python version to use, using SemVer's version range syntax
    - name: Cache node modules
      uses: actions/cache@v2
      env:
        cache-name: cache-node-modules
      with:
        # npm cache files are stored in `~/.npm` on Linux/macOS
        path: ~/.npm
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    - name: Cache Electron binaries
      uses: actions/cache@v2
      env:
        cache-name: cache-electron-bins
      with:
        # cache location is described here:
        # https://github.com/electron/get#how-it-works
        path: ~/Library/Caches/electron
        key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-build-${{ env.cache-name }}-
          ${{ runner.os }}-build-
          ${{ runner.os }}-
    # - uses: actions/setup-python@v2
    #   with:
    #     python-version: '3.x' # Version range or exact version of a Python version to use, using SemVer's version range syntax
    #     architecture: 'x64' # optional x64 or x86. Defaults to x64 if not specified
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}
    
    - name: set up env
      run: |
        npm install
    - name: npm build
      run: |
        npm run build-darwin
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - uses: actions/upload-artifact@v2
      with:
        name: eDEX-UI.MacOS.Image.dmg
        path: dist/*.dmg
        if-no-files-found: error

      env:
        CI: true
